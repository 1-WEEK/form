{"version":3,"sources":["webpack:///./examples/dynamic-fields.js"],"names":["Form1","state","useInput","onSubmit","e","preventDefault","props","form","validateFields","error","values","console","log","changeUseInput","setState","target","checked","getFieldError","getFieldDecorator","initialValue","rules","required","message","join","React","Component","propTypes","formShape","Form2","nameDecorator","Form3","WrappedForm1","createForm","WrappedForm2","WrappedForm3","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/dynamic-fields.js","sourcesContent":["/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createForm, formShape } from 'rc-form';\n\nclass Form1 extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  state = {\n    useInput: true,\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  };\n  changeUseInput = (e) => {\n    this.setState({\n      useInput: e.target.checked,\n    });\n  }\n  render() {\n    const { getFieldError, getFieldDecorator } = this.props.form;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h2>situation 1</h2>\n        {this.state.useInput ? getFieldDecorator('name', {\n          initialValue: '',\n          rules: [{\n            required: true,\n            message: 'What\\'s your name 1?',\n          }],\n        })(<input />) : null}\n        <span>text content</span>\n        {this.state.useInput ? null : getFieldDecorator('name', {\n          initialValue: '',\n          rules: [{\n            required: true,\n            message: 'What\\'s your name 2?',\n          }],\n        })(<input />)}\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={this.state.useInput} onChange={this.changeUseInput} />\n            change input\n          </label>\n          {(getFieldError('name') || []).join(', ')}\n        </div>\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nclass Form2 extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  state = {\n    useInput: true,\n  };\n  componentWillMount() {\n    const { getFieldDecorator } = this.props.form;\n    this.nameDecorator = getFieldDecorator('name', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: 'What\\'s your name?',\n      }],\n    });\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  };\n  changeUseInput = (e) => {\n    this.setState({\n      useInput: e.target.checked,\n    });\n  }\n  render() {\n    const { getFieldError } = this.props.form;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h2>situation 2</h2>\n        {this.state.useInput ? this.nameDecorator(<input />) : null}\n        <span>text content</span>\n        {this.state.useInput ? null : this.nameDecorator(<input />)}\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={this.state.useInput} onChange={this.changeUseInput} />\n            change input\n          </label>\n          {(getFieldError('name') || []).join(', ')}\n        </div>\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nclass Form3 extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  state = {\n    useInput: false,\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  };\n  changeUseInput = (e) => {\n    this.setState({\n      useInput: e.target.checked,\n    });\n  }\n  render() {\n    const { getFieldError, getFieldDecorator } = this.props.form;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h2>situation 3</h2>\n        {getFieldDecorator('name', {\n          initialValue: '',\n          rules: [{\n            required: true,\n            message: 'What\\'s your name 1?',\n          }],\n        })(<input />)}\n        {this.state.useInput ? null : getFieldDecorator('name2', {\n          initialValue: '',\n          rules: [{\n            required: true,\n            message: 'What\\'s your name 2?',\n          }],\n        })(<input />)}\n        <div>\n          <label>\n            <input type=\"checkbox\" checked={this.state.useInput} onChange={this.changeUseInput} />\n            Hide second input\n          </label>\n          {(getFieldError('name') || []).join(', ')}\n        </div>\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nconst WrappedForm1 = createForm()(Form1);\nconst WrappedForm2 = createForm()(Form2);\nconst WrappedForm3 = createForm()(Form3);\n\nReactDOM.render(\n  <div>\n    <WrappedForm1 />\n    <WrappedForm2 />\n    <WrappedForm3 />\n  </div>\n, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dynamic-fields.js"],"sourceRoot":""}