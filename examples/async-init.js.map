{"version":3,"sources":["webpack:///./examples/styles.js","webpack:///./examples/async-init.js"],"names":["regionStyle","border","marginTop","padding","errorStyle","color","Email","checkSpecial","rule","value","callback","setTimeout","props","form","getFieldProps","getFieldError","isFieldValidating","errors","initialValue","validateFirst","rules","required","type","message","validateTrigger","join","React","Component","propTypes","formShape","Form","state","loading","onSubmit","e","preventDefault","submit","validateFields","error","values","console","log","reset","resetFields","setState","setFieldsInitialValue","email","disabled","isFieldsValidating","isSubmitting","margin","NewForm","createForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/async-init.js","sourcesContent":["export const regionStyle = {\n  border: '1px solid red',\n  marginTop: 10,\n  padding: 10,\n};\n\nexport const errorStyle = {\n  color: 'red',\n  marginTop: 10,\n  padding: 10,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./examples/styles.js","/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport { createForm, formShape } from 'rc-form';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { regionStyle, errorStyle } from './styles';\n\nclass Email extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n\n  checkSpecial = (rule, value, callback) => {\n    setTimeout(() => {\n      if (value === 'yiminghe@gmail.com') {\n        callback('can not be!');\n      } else {\n        callback();\n      }\n    }, 1000);\n  }\n\n  render() {\n    const { getFieldProps, getFieldError, isFieldValidating } = this.props.form;\n    const errors = getFieldError('email');\n    return (<div style={ regionStyle }>\n      <div>email validate onBlur</div>\n      <div>\n        <input {...getFieldProps('email', {\n          initialValue: '',\n          validateFirst: true,\n          rules: [\n            {\n              required: true,\n            },\n            {\n              type: 'email',\n              message: '错误的 email 格式',\n            },\n            this.checkSpecial,\n          ],\n          validateTrigger: 'onBlur',\n        })}\n        /></div>\n      <div style={errorStyle}>\n        {errors ? errors.join(',') : null}\n      </div>\n      <div style={errorStyle}>\n        {isFieldValidating('email') ? 'validating' : null}\n      </div>\n    </div>);\n  }\n}\n\nclass Form extends Component {\n  static propTypes = {\n    form: formShape,\n  };\n\n  state = {\n    loading: true,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n      }, () => {\n        setTimeout(() => {\n          this.props.form.setFieldsInitialValue({\n            email: 'xx@gmail.com',\n          });\n        }, 1000);\n      });\n    }, 1000);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.submit((callback) => {\n      setTimeout(() => {\n        this.props.form.validateFields((error, values) => {\n          if (!error) {\n            console.log('ok', values);\n          } else {\n            console.log('error', error, values);\n          }\n          callback();\n        });\n      }, 1000);\n    });\n  }\n\n  reset = (e) => {\n    e.preventDefault();\n    this.props.form.resetFields();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <b>loading</b>;\n    }\n    const { form } = this.props;\n    const disabled = form.isFieldsValidating() || form.isSubmitting();\n    return (<div style={{ margin: 20 }}>\n      <h2>async init field</h2>\n      <form onSubmit={this.onSubmit}>\n        <Email form={ form }/>\n\n        <div style={ regionStyle }>\n          <button disabled={disabled} type=\"submit\">submit</button>\n          &nbsp;{disabled ? <span style={{ color: 'red' }}>disabled</span> : null}&nbsp;\n          <button disabled={disabled} onClick={this.reset}>reset</button>\n        </div>\n      </form>\n    </div>);\n  }\n}\n\nconst NewForm = createForm()(Form);\n\nReactDOM.render(<NewForm />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/async-init.js"],"sourceRoot":""}