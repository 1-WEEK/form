{"version":3,"sources":["webpack:///./examples/styles.js?acb5********","webpack:///./examples/validateTrigger.js"],"names":["regionStyle","border","marginTop","padding","errorStyle","color","Email","props","form","getFieldProps","getFieldError","isFieldValidating","errors","validate","trigger","rules","required","type","message","join","propTypes","formShape","User","min","validateTrigger","React","Component","Form","onSubmit","e","preventDefault","validateFields","error","values","console","log","margin","NewForm","createForm","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;AAAO,IAAMA,cAAc;AACzBC,UAAQ,eADiB;AAEzBC,aAAW,EAFc;AAGzBC,WAAS;AAHgB,CAApB;;AAMA,IAAMC,aAAa;AACxBC,SAAO,KADiB;AAExBH,aAAW,EAFa;AAGxBC,WAAS;AAHe,CAAnB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNP;;AAEA;AACA;AACA;AACA;;AAEA,SAASG,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACwCA,MAAMC,IAD9C;AAAA,MACZC,aADY,eACZA,aADY;AAAA,MACGC,aADH,eACGA,aADH;AAAA,MACkBC,iBADlB,eACkBA,iBADlB;;AAEpB,MAAMC,SAASF,cAAc,OAAd,CAAf;AACA,SAAQ;AAAA;AAAA,MAAK,OAAQ,4DAAb;AACN;AAAA;AAAA;AAAA;AAAA,KADM;AAEN;AAAA;AAAA;AACE,2EAAWD,cAAc,OAAd,EAAuB;AAChCI,kBAAU,CAAC;AACTC,mBAAS,QADA;AAETC,iBAAO,CAAC;AACNC,sBAAU;AADJ,WAAD;AAFE,SAAD,EAKP;AACDF,mBAAS,CAAC,QAAD,EAAW,UAAX,CADR;AAEDC,iBAAO,CAAC;AACNE,kBAAM,OADA;AAENC,qBAAS;AAFH,WAAD;AAFN,SALO;AADsB,OAAvB,CAAX;AADF,KAFM;AAmBN;AAAA;AAAA,QAAK,OAAO,2DAAZ;AACGN,eAASA,OAAOO,IAAP,CAAY,GAAZ,CAAT,GAA4B;AAD/B,KAnBM;AAsBN;AAAA;AAAA,QAAK,OAAO,2DAAZ;AACGR,wBAAkB,OAAlB,IAA6B,YAA7B,GAA4C;AAD/C;AAtBM,GAAR;AA0BD;;AAEDL,MAAMc,SAAN,GAAkB;AAChBZ,QAAM,kDAAAa;AADU,CAAlB;;IAIMC,I;;;;;;;;;;;6BAIK;AAAA,yBACqD,KAAKf,KAAL,CAAWC,IADhE;AAAA,UACCC,aADD,gBACCA,aADD;AAAA,UACgBC,aADhB,gBACgBA,aADhB;AAAA,UAC+BC,iBAD/B,gBAC+BA,iBAD/B;;AAEP,UAAMC,SAASF,cAAc,MAAd,CAAf;AACA,aAAQ;AAAA;AAAA,UAAK,OAAQ,4DAAb;AACN;AAAA;AAAA;AAAA;AAAA,SADM;AAEN;AAAA;AAAA;AACE,+EAAWD,cAAc,MAAd,EAAsB;AAC/BM,mBAAO,CACL;AACEC,wBAAU;AADZ,aADK,EAIL;AACEC,oBAAM,QADR;AAEEM,mBAAK;AAFP,aAJK,CADwB;AAU/BC,6BAAiB;AAVc,WAAtB,CAAX;AADF,SAFM;AAiBN;AAAA;AAAA,YAAK,OAAO,2DAAZ;AACIZ,gBAAD,GAAWA,OAAOO,IAAP,CAAY,GAAZ,CAAX,GAA8B;AADjC,SAjBM;AAoBN;AAAA;AAAA,YAAK,OAAO,2DAAZ;AACGR,4BAAkB,MAAlB,IAA4B,YAA5B,GAA2C;AAD9C;AApBM,OAAR;AAwBD;;;;EA/BgB,6CAAAc,CAAMC,S;;AAAnBJ,I,CACGF,S,GAAY;AACjBZ,QAAM,kDAAAa;AADW,C;;IAiCfM,I;;;;;;;;;;;;;;kPAKJC,Q,GAAW,UAACC,CAAD,EAAO;AAChBA,QAAEC,cAAF;AACA,aAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,cAAhB,CAA+B,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChD,YAAI,CAACD,KAAL,EAAY;AACVE,kBAAQC,GAAR,CAAY,IAAZ,EAAkBF,MAAlB;AACD,SAFD,MAEO;AACLC,kBAAQC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EAA4BC,MAA5B;AACD;AACF,OAND;AAOD,K;;;;;6BAEQ;AAAA,UACCzB,IADD,GACU,KAAKD,KADf,CACCC,IADD;;AAEP,aAAQ;AAAA;AAAA,UAAK,OAAO,EAAE4B,QAAQ,EAAV,EAAZ;AACN;AAAA;AAAA;AAAA;AAAA,SADM;AAEN;AAAA;AAAA,YAAM,UAAU,KAAKR,QAArB;AACE,sEAAC,IAAD,IAAM,MAAOpB,IAAb,GADF;AAGE,sEAAC,KAAD,IAAO,MAAOA,IAAd,GAHF;AAKE;AAAA;AAAA,cAAK,OAAQ,4DAAb;AACE;AAAA;AAAA;AAAA;AAAA;AADF;AALF;AAFM,OAAR;AAYD;;;;EA9BgB,gD;;AAAbmB,I,CACGP,S,GAAY;AACjBZ,QAAM,kDAAAa;AADW,C;;;AAgCrB,IAAMgB,UAAU,kFAAAC,GAAaX,IAAb,CAAhB;;AAEA,iDAAAY,CAASC,MAAT,CAAgB,4DAAC,OAAD,OAAhB,EAA6BC,SAASC,cAAT,CAAwB,iBAAxB,CAA7B,E","file":"examples/validateTrigger.js","sourcesContent":["export const regionStyle = {\n  border: '1px solid red',\n  marginTop: 10,\n  padding: 10,\n};\n\nexport const errorStyle = {\n  color: 'red',\n  marginTop: 10,\n  padding: 10,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./examples/styles.js","/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport { createForm, formShape } from 'rc-form';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { regionStyle, errorStyle } from './styles';\n\nfunction Email(props) {\n  const { getFieldProps, getFieldError, isFieldValidating } = props.form;\n  const errors = getFieldError('email');\n  return (<div style={ regionStyle }>\n    <div>email validate onBlur && onChange</div>\n    <div>\n      <input {...getFieldProps('email', {\n        validate: [{\n          trigger: 'onBlur',\n          rules: [{\n            required: true,\n          }],\n        }, {\n          trigger: ['onBlur', 'onChange'],\n          rules: [{\n            type: 'email',\n            message: '错误的 email 格式',\n          }],\n        }],\n      })}\n      />\n    </div>\n    <div style={errorStyle}>\n      {errors ? errors.join(',') : null}\n    </div>\n    <div style={errorStyle}>\n      {isFieldValidating('email') ? 'validating' : null}\n    </div>\n  </div>);\n}\n\nEmail.propTypes = {\n  form: formShape,\n};\n\nclass User extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  render() {\n    const { getFieldProps, getFieldError, isFieldValidating } = this.props.form;\n    const errors = getFieldError('user');\n    return (<div style={ regionStyle }>\n      <div>user validate on submit</div>\n      <div>\n        <input {...getFieldProps('user', {\n          rules: [\n            {\n              required: true,\n            },\n            {\n              type: 'string',\n              min: 5,\n            },\n          ],\n          validateTrigger: null,\n        })}\n        />\n      </div>\n      <div style={errorStyle}>\n        {(errors) ? errors.join(',') : null}\n      </div>\n      <div style={errorStyle}>\n        {isFieldValidating('user') ? 'validating' : null}\n      </div>\n    </div>);\n  }\n}\n\nclass Form extends Component {\n  static propTypes = {\n    form: formShape,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  };\n\n  render() {\n    const { form } = this.props;\n    return (<div style={{ margin: 20 }}>\n      <h2>use validateTrigger config</h2>\n      <form onSubmit={this.onSubmit}>\n        <User form={ form }/>\n\n        <Email form={ form }/>\n\n        <div style={ regionStyle }>\n          <button>submit</button>\n        </div>\n      </form>\n    </div>);\n  }\n}\n\nconst NewForm = createForm()(Form);\n\nReactDOM.render(<NewForm />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/validateTrigger.js"],"sourceRoot":""}