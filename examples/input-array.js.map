{"version":3,"sources":["webpack:///./examples/styles.js?acb5***********","webpack:///./examples/input-array.js"],"names":["regionStyle","border","marginTop","padding","errorStyle","color","uuid","Form","remove","k","form","props","keys","getFieldValue","filter","key","setFieldsValue","add","concat","submit","e","preventDefault","console","log","getFieldsValue","getFieldProps","initialValue","inputs","map","bind","React","Component","propTypes","formShape","createForm","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;AAAO,IAAMA,cAAc;AACzBC,UAAQ,eADiB;AAEzBC,aAAW,EAFc;AAGzBC,WAAS;AAHgB,CAApB;;AAMA,IAAMC,aAAa;AACxBC,SAAO,KADiB;AAExBH,aAAW,EAFa;AAGxBC,WAAS;AAHe,CAAnB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNP;;AAEA;AACA;AACA;AACA;;AAEA,IAAIG,OAAO,CAAX;;IAGMC,I;;;;;;;;;;;;;;+OAIJC,M,GAAS,UAACC,CAAD,EAAO;AAAA,UACNC,IADM,GACG,MAAKC,KADR,CACND,IADM;AAEd;;AACA,UAAIE,OAAOF,KAAKG,aAAL,CAAmB,MAAnB,CAAX;AACAD,aAAOA,KAAKE,MAAL,CAAY,UAACC,GAAD,EAAS;AAC1B,eAAOA,QAAQN,CAAf;AACD,OAFM,CAAP;AAGA;AACAC,WAAKM,cAAL,CAAoB;AAClBJ;AADkB,OAApB;AAGD,K,QACDK,G,GAAM,YAAM;AACVX;AADU,UAEFI,IAFE,GAEO,MAAKC,KAFZ,CAEFD,IAFE;AAGV;;AACA,UAAIE,OAAOF,KAAKG,aAAL,CAAmB,MAAnB,CAAX;AACAD,aAAOA,KAAKM,MAAL,CAAYZ,IAAZ,CAAP;AACA;AACA;AACAI,WAAKM,cAAL,CAAoB;AAClBJ;AADkB,OAApB;AAGD,K,QACDO,M,GAAS,UAACC,CAAD,EAAO;AACdA,QAAEC,cAAF;AACAC,cAAQC,GAAR,CAAY,MAAKZ,KAAL,CAAWD,IAAX,CAAgBc,cAAhB,EAAZ;AACD,K;;;;;6BACQ;AAAA;;AAAA,wBACkC,KAAKb,KAAL,CAAWD,IAD7C;AAAA,UACCe,aADD,eACCA,aADD;AAAA,UACgBZ,aADhB,eACgBA,aADhB;;AAEPY,oBAAc,MAAd,EAAsB;AACpBC,sBAAc;AADM,OAAtB;AAGA,UAAMC,SAASd,cAAc,MAAd,EAAsBe,GAAtB,CAA0B,UAACnB,CAAD,EAAO;AAC9C,eAAQ;AAAA;AAAA,YAAK,KAAKA,CAAV,EAAa,OAAQ,4DAArB;AACN,+EAAWgB,uBAAqBhB,CAArB,CAAX,CADM;AAEN;AAAA;AAAA;AACE,uBAAS,OAAKD,MAAL,CAAYqB,IAAZ,CAAiB,MAAjB,EAAuBpB,CAAvB;AADX;AAAA;AAAA;AAFM,SAAR;AAKD,OANc,CAAf;AAOA,aAAQ;AAAA;AAAA;AACLkB,cADK;AAEN;AAAA;AAAA,YAAK,OAAQ,4DAAb;AACE;AAAA;AAAA,cAAQ,SAAS,KAAKR,MAAtB;AAAA;AAAA,WADF;AAGE;AAAA;AAAA,cAAQ,SAAS,KAAKF,GAAtB;AAAA;AAAA;AAHF;AAFM,OAAR;AAQD;;;;EApDgB,6CAAAa,CAAMC,S;;AAAnBxB,I,CACGyB,S,GAAY;AACjBtB,QAAM,kDAAAuB;AADW,C;;;AAsDrB1B,OAAO,kFAAA2B,GAAa3B,IAAb,CAAP;;AAEA,iDAAA4B,CAASC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BC,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"examples/input-array.js","sourcesContent":["export const regionStyle = {\n  border: '1px solid red',\n  marginTop: 10,\n  padding: 10,\n};\n\nexport const errorStyle = {\n  color: 'red',\n  marginTop: 10,\n  padding: 10,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./examples/styles.js","/* eslint no-console:0 */\n\nimport { createForm, formShape } from 'rc-form';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { regionStyle } from './styles';\n\nlet uuid = 0;\n\n\nclass Form extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n  remove = (k) => {\n    const { form } = this.props;\n    // can use data-binding to get\n    let keys = form.getFieldValue('keys');\n    keys = keys.filter((key) => {\n      return key !== k;\n    });\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys,\n    });\n  }\n  add = () => {\n    uuid++;\n    const { form } = this.props;\n    // can use data-binding to get\n    let keys = form.getFieldValue('keys');\n    keys = keys.concat(uuid);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys,\n    });\n  }\n  submit = (e) => {\n    e.preventDefault();\n    console.log(this.props.form.getFieldsValue());\n  }\n  render() {\n    const { getFieldProps, getFieldValue } = this.props.form;\n    getFieldProps('keys', {\n      initialValue: [],\n    });\n    const inputs = getFieldValue('keys').map((k) => {\n      return (<div key={k} style={ regionStyle }>\n        <input {...getFieldProps(`name${k}`)}/>\n        <a\n          onClick={this.remove.bind(this, k)}\n        >delete</a></div>);\n    });\n    return (<div>\n      {inputs}\n      <div style={ regionStyle }>\n        <button onClick={this.submit}>submit</button>\n\n        <button onClick={this.add}>add</button>\n      </div>\n    </div>);\n  }\n}\n\nForm = createForm()(Form);\n\nReactDOM.render(<Form />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/input-array.js"],"sourceRoot":""}