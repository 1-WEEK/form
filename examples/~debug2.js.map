{"version":3,"sources":["webpack:///./examples/~debug2.js"],"names":["Demo","onValidate","validateFields","props","form","error","values","console","warn","getFieldDecorator","getFieldsValue","log","rules","required","React","Component","createForm","onFieldsChange","fields","allFields","add","onChange","mapPropsToFields","obj","Object","keys","forEach","key","createFormField","Test","state","name","value","age","setState","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;;IAEMA,I;;;;;;;;;;;;;;+OACJC,U,GAAa,YAAM;AAAA,UACDC,cADC,GACoB,MAAKC,KADzB,CACTC,IADS,CACDF,cADC;;AAEjBA,qBAAe,UAACG,KAAD,EAAQC,MAAR,EAAmB;AAChCC,gBAAQC,IAAR,CAAa,UAAb,EAAyBH,KAAzB,EAAgCC,MAAhC;AACD,OAFD;AAGD,K;;;;;6BAEQ;AAAA,wBACuC,KAAKH,KAAL,CAAWC,IADlD;AAAA,UACCK,iBADD,eACCA,iBADD;AAAA,UACoBC,cADpB,eACoBA,cADpB;;AAEPH,cAAQI,GAAR,CAAY,SAAZ,EAAuBD,gBAAvB;;AAEA,aACE;AAAA;AAAA;AACGD,0BAAkB,MAAlB,EAA0B;AACzBG,iBAAO,CAAC,EAAEC,UAAU,IAAZ,EAAD;AADkB,SAA1B,EAEE,0EAFF,CADH;AAIGJ,0BAAkB,KAAlB,EAAyB;AACxBG,iBAAO,CAAC,EAAEC,UAAU,IAAZ,EAAD;AADiB,SAAzB,EAEE,0EAFF,CAJH;AAOE;AAAA;AAAA,YAAQ,SAAS,KAAKZ,UAAtB;AAAA;AAAA;AAPF,OADF;AAWD;;;;EAvBgBa,6CAAKA,CAACC,S;;AA0BzBf,OAAOgB,mEAAUA,CAAC;AAChBC,kBAAgB,+BAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,EAA0C;AAAA,QAAvCC,QAAuC,SAAvCA,QAAuC;;AACxDA,aAASH,MAAT;AACD,GAHe;AAIhBI,oBAAkB,iCAAgB;AAAA,QAAbJ,MAAa,SAAbA,MAAa;;AAChC,QAAMK,MAAM,EAAZ;AACAC,WAAOC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnCJ,UAAII,GAAJ,IAAWC,wEAAeA,CAACA,0EACtBV,OAAOS,GAAP,CADM,EAAX;AAGD,KAJD;AAKApB,YAAQI,GAAR,CAAY,MAAZ,EAAoBY,GAApB,EAAyBL,MAAzB;AACA,WAAOK,GAAP;AACD;AAbe,CAAX,EAcJvB,IAdI,CAAP;;IAgBM6B,I;;;;;;;;;;;;;;sPACJC,K,GAAQ;AACNC,YAAM,EAAEC,OAAO,EAAT,EADA;AAENC,WAAK,EAAED,OAAO,EAAT;AAFC,K,SAKRX,Q,GAAW,UAACH,MAAD,EAAY;AACrB,aAAKgB,QAAL,CAAchB,MAAd;AACD,K;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE,oEAAC,IAAD,IAAM,QAAQ,KAAKY,KAAnB,EAA0B,UAAU,KAAKT,QAAzC;AADF,OADF;AAKD;;;;EAhBgBP,6CAAKA,CAACC,S;;AAmBzBoB,iDAAQA,CAACC,MAAT,CACE,4DAAC,IAAD,OADF,EAEIC,SAASC,cAAT,CAAwB,iBAAxB,CAFJ;;AAIA,mB","file":"examples/~debug2.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createForm, createFormField } from 'rc-form';\n\nclass Demo extends React.Component {\n  onValidate = () => {\n    const { form: { validateFields } } = this.props;\n    validateFields((error, values) => {\n      console.warn('validate', error, values);\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldsValue } = this.props.form;\n    console.log('Render:', getFieldsValue());\n\n    return (\n      <div>\n        {getFieldDecorator('name', {\n          rules: [{ required: true }],\n        })(<input />)}\n        {getFieldDecorator('age', {\n          rules: [{ required: true }],\n        })(<input />)}\n        <button onClick={this.onValidate}>Validate</button>\n      </div>\n    );\n  }\n}\n\nDemo = createForm({\n  onFieldsChange: ({ onChange }, fields, allFields, add) => {\n    onChange(fields);\n  },\n  mapPropsToFields: ({ fields }) => {\n    const obj = {};\n    Object.keys(fields).forEach((key) => {\n      obj[key] = createFormField({\n        ...fields[key],\n      });\n    });\n    console.log('MAP:', obj, fields);\n    return obj;\n  }\n})(Demo);\n\nclass Test extends React.Component {\n  state = {\n    name: { value: '' },\n    age: { value: '' },\n  };\n\n  onChange = (fields) => {\n    this.setState(fields);\n  };\n\n  render() {\n    return (\n      <div>\n        <Demo fields={this.state} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Test />\n  , document.getElementById('__react-content'));\n\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./examples/~debug2.js"],"sourceRoot":""}