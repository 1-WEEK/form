{"version":3,"sources":["webpack:///./examples/~debug4.js"],"names":["MyInput","onChange","value","target","props","split","join","React","Component","Form","onSubmit","e","preventDefault","form","validateFields","error","values","console","log","nameDecorator","getFieldDecorator","initialValue","rules","required","message","type","defaultField","getFieldError","color","WrappedForm","createForm","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;;IAEMA,O;;;;;;;;;;;;;;qPACJC,Q,GAAW,iBAA2B;AAAA,UAAdC,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AAAA,UAC5BD,QAD4B,GACf,MAAKG,KADU,CAC5BH,QAD4B;;AAEpCA,eAASC,MAAMG,KAAN,CAAY,GAAZ,CAAT;AACD,K;;;;;6BACQ;AAAA,yBACgB,KAAKD,KADrB,CACCF,KADD;AAAA,UACCA,KADD,gCACS,EADT;;AAEP,aACE,uEAAO,UAAU,KAAKD,QAAtB,EAAgC,OAAOC,MAAMI,IAAN,CAAW,GAAX,CAAvC,GADF;AAGD;;;;EAVmBC,6CAAKA,CAACC,S;;IAatBC,I;;;;;;;;;;;;;;sPAQJC,Q,GAAW,UAACC,CAAD,EAAO;AAChBA,QAAEC,cAAF;AACA,aAAKR,KAAL,CAAWS,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChD,YAAI,CAACD,KAAL,EAAY;AACVE,kBAAQC,GAAR,CAAY,IAAZ,EAAkBF,MAAlB;AACD,SAFD,MAEO;AACLC,kBAAQC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EAA4BC,MAA5B;AACD;AACF,OAND;AAOD,K;;;;;yCAhBoB;AACnB,WAAKG,aAAL,GAAqB,KAAKf,KAAL,CAAWS,IAAX,CAAgBO,iBAAhB,CAAkC,MAAlC,EAA0C;AAC7DC,sBAAc,EAD+C;AAE7DC,eAAO,CAAC,EAAEC,UAAU,IAAZ,EAAkBC,SAAS,uBAA3B,EAAoDC,MAAM,OAA1D,EAAmEC,cAAc,EAAED,MAAM,KAAR,EAAjF,EAAD;AAFsD,OAA1C,CAArB;AAID;;;6BAaQ;AAAA,UACCE,aADD,GACmB,KAAKvB,KAAL,CAAWS,IAD9B,CACCc,aADD;;;AAGP,aACE;AAAA;AAAA,UAAM,UAAU,KAAKjB,QAArB;AACG,aAAKS,aAAL,CACC,4DAAC,OAAD,OADD,CADH;AAIE;AAAA;AAAA,YAAK,OAAO,EAAES,OAAO,KAAT,EAAZ;AACG,WAACD,cAAc,MAAd,KAAyB,EAA1B,EAA8BrB,IAA9B,CAAmC,IAAnC;AADH,SAJF;AAQG,aAAKF,KAAL,CAAWS,IAAX,CAAgBO,iBAAhB,CAAkC,QAAlC,EAA4C;AAC3CE,iBAAO,CAAC,EAAEC,UAAU,IAAZ,EAAD;AADoC,SAA5C,EAEE,0EAFF,CARH;AAYE;AAAA;AAAA;AAAA;AAAA;AAZF,OADF;AAgBD;;;;EAtCgBhB,6CAAKA,CAACC,S;;AAyCzB,IAAMqB,cAAcC,mEAAUA,GAAGrB,IAAb,CAApB;AACAsB,iDAAQA,CAACC,MAAT,CAAgB,4DAAC,WAAD,OAAhB,EAAiCC,SAASC,cAAT,CAAwB,iBAAxB,CAAjC;AACA,mB","file":"examples/~debug4.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createForm, formShape } from 'rc-form';\n\nclass MyInput extends React.Component {\n  onChange = ({ target: { value } }) => {\n    const { onChange } = this.props;\n    onChange(value.split(','));\n  };\n  render() {\n    const { value = [] } = this.props;\n    return (\n      <input onChange={this.onChange} value={value.join(',')} />\n    );\n  }\n}\n\nclass Form extends React.Component {\n  componentWillMount() {\n    this.nameDecorator = this.props.form.getFieldDecorator('name', {\n      initialValue: [],\n      rules: [{ required: true, message: 'The tags must be urls', type: 'array', defaultField: { type: 'url' } }],\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {\n        console.log('ok', values);\n      } else {\n        console.log('error', error, values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldError } = this.props.form;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        {this.nameDecorator(\n          <MyInput />\n        )}\n        <div style={{ color: 'red' }}>\n          {(getFieldError('name') || []).join(', ')}\n        </div>\n\n        {this.props.form.getFieldDecorator('test.a', {\n          rules: [{ required: true }],\n        })(<input />)}\n\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nconst WrappedForm = createForm()(Form);\nReactDOM.render(<WrappedForm />, document.getElementById('__react-content'));\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./examples/~debug4.js"],"sourceRoot":""}